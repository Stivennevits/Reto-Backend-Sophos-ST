#Configuración inicial para evitar el error de que no se ha configurado una base de datos
#spring.autoconfigure.exclude = org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

#:::::::: Nombre del microservicio :::::::::
spring.application.name=challenge-backend-sophos.

#:::::::: Puerto :::::::::::::::::::::::::::
#Configuración del puerto que usará nuestra aplicación, por defecto es 8080
server.port=8090

# Habilitación del LiveReload cuando sea posible
spring.devtools.livereload.enabled = true

# -------------------- Configuración de conexión a MySQL --------------------

#:::::::: DataSource MySQL :::::::::::::::::
spring.datasource.url=jdbc:mysql://localhost:3306/db-reto

# Usuario de base de datos
spring.datasource.username=root

# Contraseña para el usuario de la base de datos
spring.datasource.password=1234

# Clase a usar para conectar con la base de datos
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Dialecto a usar de SQL, en este caso MySQL8
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

#server.servlet.context-path=/api/controller

#Permite que la primera vez que se arranque el proyecto se creen las tablas en la base de datos
    spring.jpa.hibernate.ddl-auto=update

# -------------------- Mostrar en consola el SQL que se está ejecutando --------------------

# Formatear salida del SQL en consola
spring.jpa.properties.hibernate.format_sql = true

# Hacer que se muestre en consola el SQL ejecutado
logging.level.org.hibernate.SQL=debug

# Hacer que se muestre en consola los valores que se inyectan a la sentencia SQL
logging.level.org.hibernate.type.descriptor.sql.BasicBinder = TRACE




